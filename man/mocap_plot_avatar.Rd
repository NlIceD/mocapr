% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/animation_functions.R
\name{mocap_plot_avatar}
\alias{mocap_plot_avatar}
\title{Add an avatar to a mocap plot or animation}
\usage{
mocap_plot_avatar(
  .plot,
  use_geom_point = TRUE,
  line_colored = TRUE,
  line_colored_alpha = 1,
  line_black = TRUE,
  line_black_alpha = 0.5,
  point = TRUE,
  point_alpha = 1,
  up_column = U
)
}
\arguments{
\item{.plot}{A ggplot2 object containg mocap data in the mocapr format as it it created by \code{\link{mocap_plot_basic}}}

\item{use_geom_point}{Defaults to TRUE. If TRUE, points in the animation will be created using ggplot2::geom_point(). If FALSE, points are created using ggforce::geom_circle(). This will ensure correct size-proportions of the points, and that no points are croped out of the animation. However, it comes at the prize of much longer rendering-times.}

\item{line_colored}{Shall the joints be connected by colored lines? (\code{TRUE} or \code{FALSE}). Defaults to \code{TRUE}.}

\item{line_colored_alpha}{The alpha value of the colored lines connecting the joint centers.}

\item{line_black}{Shall the joints be connected by black lines? (\code{TRUE} or \code{FALSE}). Defaults to \code{TRUE}.}

\item{line_black_alpha}{The alhpa value of the black lines connecting the joint centers.}

\item{point}{Shall the joint centers be marked by points? (\code{TRUE} or \code{FALSE}). Defaults to \code{TRUE}.}

\item{point_alpha}{The alpha of the points or circles that mark the joint centers.}

\item{up_column}{The unquoted name of the column that contains the Up direction. Defaults to \code{U}, must be \code{Y} if the plots is prepared using \code{\link{animate_global}}.}
}
\value{
A ggplot2 object
}
\description{
\code{mocap_plot_avartar} is called by the functions \code{\link{animate_global}}, \code{\link{animate_anatomical}}, and \code{\link{animate_movement}} functions
after they have called \code{\link{mocap_plot_basic}}
}
\examples{
df <- dplyr::filter(mocapr::mocapr_data, movement_nr == 1)
df <- dplyr::filter(df, frame \%in\% c(1, 50, 75, 100))
df <- mocapr::animate_global(df,
                             return_data = TRUE)
df <- mocap_plot_basic(df,
                 planes = c("X", "Y"), # Because the data comes from animate_global()
                 planes_in_rows_or_cols = "rows",
                 col_facets = frame
                 )
mocap_plot_avatar(df,
                  up_column = Y) # Because the data comes from animate_global()

}
